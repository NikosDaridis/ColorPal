@inherits PageBase

@page "/settings"

<div class="p-4 space-y-4 text-[var(--theme-invert-color)]">
    <div class="flex justify-between items-center">
        <h2 class="text-xl font-bold">Settings</h2>
        <TransparentRoundButton IconPath="Icons\arrow.svg"
                                HandleClick=@(() => NavigationManager?.NavigateTo("/")) />
    </div>

    <div class="space-y-4">
        <ThemeSettingsOption LocalStorageService=LocalStorageService
                             Label="Theme"
                             StateService=StateService />

        <ToggleSettingsOption LocalStorageService=LocalStorageService
                              Label="Auto Save EyeDropper"
                              StorageKey=StorageKey.AutoSaveEyedropper />

        <ToggleSettingsOption LocalStorageService=LocalStorageService
                              Label="Auto Copy Code"
                              StorageKey=StorageKey.AutoCopyCode />

        <ToggleSettingsOption LocalStorageService=LocalStorageService
                              Label="Add # to HEX"
                              StorageKey=StorageKey.AddHexCharacter />

        <ToggleSettingsOption LocalStorageService=LocalStorageService
                              Label="Show Color Name"
                              StorageKey=StorageKey.ShowColorNames />
    </div>

    <div class="flex justify-between gap-4 items-center pt-4 border-t border-t-[var(--invert-theme-color)]">
        @if (JSRuntime is not null)
        {
            <RectangularLabelButton Label="Website"
                                    IconPath="Icons\website.svg"
                                    IconSize=Size.Small
                                    HandleClick=@(async () => await JSRuntime.InvokeVoidAsync("window.open", "https://daridis.com/colorpal", "_blank")) />
            <RectangularLabelButton Label="GitHub"
                                    IconPath="Icons\github.svg"
                                    IconSize=Size.Small
                                    HandleClick=@(async () => await JSRuntime.InvokeVoidAsync("window.open", "https://github.com/nikosdaridis/colorpal", "_blank")) />
            <h4>@($"v{_manifestVersion}")</h4>
        }
    </div>
</div>

@code {
    private string? _manifestVersion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (JSRuntime is null)
            return;

        _manifestVersion = await JSRuntime.InvokeAsync<string>("getManifestVersionAsync");
    }
}
