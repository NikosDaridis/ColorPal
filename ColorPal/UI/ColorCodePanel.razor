<div class="mt-2 space-y-2">
    <div class="flex items-center space-x-2">
        <input type="text" class="flex h-10 w-full text-[var(--theme-invert-color)] rounded-md border border-[var(--secondary-color)] px-3 py-2 text-md bg-[var(--primary-color)]" value="@_inputValue" readonly>

        <button class="inline-flex items-center justify-center rounded-md text-sm font-medium border border-[var(--secondary-color)] h-10 w-10 bg-[var(--primary-color)] hover:bg-[var(--secondary-color)]">
            <img class="h-[15px] w-[15px] theme-filter" src="Icons/copyClipboard.svg" />
        </button>
    </div>
</div>

@code {
    [Parameter]
    public LocalStorageService? LocalStorageService { get; set; }

    [Parameter]
    public EventAggregator<string>? EventAggregator { get; set; }

    private string _inputValue = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (LocalStorageService is not null)
            await HandleActiveTabChange(await LocalStorageService.GetKeyAsync<string>(StorageKeys.ColorCodeFormat));

        EventAggregator?.GetService(Events.ColorCodeActiveTab).Subscribe(HandleActiveTabChange);
    }

    /// <summary>
    /// Handles active tab change event
    /// </summary>
    private async Task HandleActiveTabChange(string? activeTabName)
    {
        _inputValue = $"Value for {activeTabName}";

        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        EventAggregator?.GetService(Events.ColorCodeActiveTab).Unsubscribe(HandleActiveTabChange);
    }
}
